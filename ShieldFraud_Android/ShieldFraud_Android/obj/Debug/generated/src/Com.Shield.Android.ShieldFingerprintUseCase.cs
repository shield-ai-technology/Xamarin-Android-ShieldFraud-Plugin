//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Shield.Android {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.shield.android']/class[@name='ShieldFingerprintUseCase']"
	[global::Android.Runtime.Register ("com/shield/android/ShieldFingerprintUseCase", DoNotGenerateAcw=true)]
	public partial class ShieldFingerprintUseCase : global::Java.Lang.Object {

		// Metadata.xml XPath field reference: path="/api/package[@name='com.shield.android']/class[@name='ShieldFingerprintUseCase']/field[@name='appInBackground']"
		[Register ("appInBackground")]
		protected bool AppInBackground {
			get {
				const string __id = "appInBackground.Z";

				var __v = _members.InstanceFields.GetBooleanValue (__id, this);
				return __v;
			}
			set {
				const string __id = "appInBackground.Z";

				try {
					_members.InstanceFields.SetValue (__id, this, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.shield.android']/class[@name='ShieldFingerprintUseCase']/field[@name='deviceResultStateListener']"
		[Register ("deviceResultStateListener")]
		public global::Com.Shield.Android.Shield.IDeviceResultStateListener DeviceResultStateListener {
			get {
				const string __id = "deviceResultStateListener.Lcom/shield/android/Shield$DeviceResultStateListener;";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.IDeviceResultStateListener> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "deviceResultStateListener.Lcom/shield/android/Shield$DeviceResultStateListener;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.shield.android']/class[@name='ShieldFingerprintUseCase']/field[@name='needBackgroundListener']"
		[Register ("needBackgroundListener")]
		protected bool NeedBackgroundListener {
			get {
				const string __id = "needBackgroundListener.Z";

				var __v = _members.InstanceFields.GetBooleanValue (__id, this);
				return __v;
			}
			set {
				const string __id = "needBackgroundListener.Z";

				try {
					_members.InstanceFields.SetValue (__id, this, value);
				} finally {
				}
			}
		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.shield.android']/class[@name='ShieldFingerprintUseCase.CaptchaReceiver']"
		[global::Android.Runtime.Register ("com/shield/android/ShieldFingerprintUseCase$CaptchaReceiver", DoNotGenerateAcw=true)]
		protected internal partial class CaptchaReceiver : global::Android.Content.BroadcastReceiver {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/shield/android/ShieldFingerprintUseCase$CaptchaReceiver", typeof (CaptchaReceiver));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected CaptchaReceiver (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.shield.android']/class[@name='ShieldFingerprintUseCase.CaptchaReceiver']/constructor[@name='ShieldFingerprintUseCase.CaptchaReceiver' and count(parameter)=2 and parameter[1][@type='com.shield.android.ShieldFingerprintUseCase'] and parameter[2][@type='android.content.Context']]"
			[Register (".ctor", "(Lcom/shield/android/ShieldFingerprintUseCase;Landroid/content/Context;)V", "")]
			protected unsafe CaptchaReceiver (global::Com.Shield.Android.ShieldFingerprintUseCase __self, global::Android.Content.Context context) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType) + ";Landroid/content/Context;)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					__args [1] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
					global::System.GC.KeepAlive (context);
				}
			}

			static Delegate cb_onReceive_Landroid_content_Context_Landroid_content_Intent_;
#pragma warning disable 0169
			static Delegate GetOnReceive_Landroid_content_Context_Landroid_content_Intent_Handler ()
			{
				if (cb_onReceive_Landroid_content_Context_Landroid_content_Intent_ == null)
					cb_onReceive_Landroid_content_Context_Landroid_content_Intent_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OnReceive_Landroid_content_Context_Landroid_content_Intent_));
				return cb_onReceive_Landroid_content_Context_Landroid_content_Intent_;
			}

			static void n_OnReceive_Landroid_content_Context_Landroid_content_Intent_ (IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_intent)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.ShieldFingerprintUseCase.CaptchaReceiver> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				var context = global::Java.Lang.Object.GetObject<global::Android.Content.Context> (native_context, JniHandleOwnership.DoNotTransfer);
				var intent = global::Java.Lang.Object.GetObject<global::Android.Content.Intent> (native_intent, JniHandleOwnership.DoNotTransfer);
				__this.OnReceive (context, intent);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='ShieldFingerprintUseCase.CaptchaReceiver']/method[@name='onReceive' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.content.Intent']]"
			[Register ("onReceive", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnReceive_Landroid_content_Context_Landroid_content_Intent_Handler")]
			public override unsafe void OnReceive (global::Android.Content.Context context, global::Android.Content.Intent intent)
			{
				const string __id = "onReceive.(Landroid/content/Context;Landroid/content/Intent;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
					__args [1] = new JniArgumentValue ((intent == null) ? IntPtr.Zero : ((global::Java.Lang.Object) intent).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (context);
					global::System.GC.KeepAlive (intent);
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/shield/android/ShieldFingerprintUseCase", typeof (ShieldFingerprintUseCase));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ShieldFingerprintUseCase (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		static Delegate cb_getLatestDeviceResult;
#pragma warning disable 0169
		static Delegate GetGetLatestDeviceResultHandler ()
		{
			if (cb_getLatestDeviceResult == null)
				cb_getLatestDeviceResult = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetLatestDeviceResult));
			return cb_getLatestDeviceResult;
		}

		static IntPtr n_GetLatestDeviceResult (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.ShieldFingerprintUseCase> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.LatestDeviceResult);
		}
#pragma warning restore 0169

		public virtual unsafe global::Org.Json.JSONObject LatestDeviceResult {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='ShieldFingerprintUseCase']/method[@name='getLatestDeviceResult' and count(parameter)=0]"
			[Register ("getLatestDeviceResult", "()Lorg/json/JSONObject;", "GetGetLatestDeviceResultHandler")]
			get {
				const string __id = "getLatestDeviceResult.()Lorg/json/JSONObject;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Org.Json.JSONObject> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_getResponseError;
#pragma warning disable 0169
		static Delegate GetGetResponseErrorHandler ()
		{
			if (cb_getResponseError == null)
				cb_getResponseError = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetResponseError));
			return cb_getResponseError;
		}

		static IntPtr n_GetResponseError (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.ShieldFingerprintUseCase> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.ResponseError);
		}
#pragma warning restore 0169

		public virtual unsafe global::Com.Shield.Android.ShieldException ResponseError {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='ShieldFingerprintUseCase']/method[@name='getResponseError' and count(parameter)=0]"
			[Register ("getResponseError", "()Lcom/shield/android/ShieldException;", "GetGetResponseErrorHandler")]
			get {
				const string __id = "getResponseError.()Lcom/shield/android/ShieldException;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Shield.Android.ShieldException> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_getSessionId;
#pragma warning disable 0169
		static Delegate GetGetSessionIdHandler ()
		{
			if (cb_getSessionId == null)
				cb_getSessionId = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetSessionId));
			return cb_getSessionId;
		}

		static IntPtr n_GetSessionId (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.ShieldFingerprintUseCase> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.NewString (__this.SessionId);
		}
#pragma warning restore 0169

		public virtual unsafe string SessionId {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='ShieldFingerprintUseCase']/method[@name='getSessionId' and count(parameter)=0]"
			[Register ("getSessionId", "()Ljava/lang/String;", "GetGetSessionIdHandler")]
			get {
				const string __id = "getSessionId.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_sendAttributes_Ljava_lang_String_Ljava_util_HashMap_;
#pragma warning disable 0169
		static Delegate GetSendAttributes_Ljava_lang_String_Ljava_util_HashMap_Handler ()
		{
			if (cb_sendAttributes_Ljava_lang_String_Ljava_util_HashMap_ == null)
				cb_sendAttributes_Ljava_lang_String_Ljava_util_HashMap_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_SendAttributes_Ljava_lang_String_Ljava_util_HashMap_));
			return cb_sendAttributes_Ljava_lang_String_Ljava_util_HashMap_;
		}

		static void n_SendAttributes_Ljava_lang_String_Ljava_util_HashMap_ (IntPtr jnienv, IntPtr native__this, IntPtr native_screenName, IntPtr native_data)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.ShieldFingerprintUseCase> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var screenName = JNIEnv.GetString (native_screenName, JniHandleOwnership.DoNotTransfer);
			var data = global::Android.Runtime.JavaDictionary<string, string>.FromJniHandle (native_data, JniHandleOwnership.DoNotTransfer);
			__this.SendAttributes (screenName, data);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='ShieldFingerprintUseCase']/method[@name='sendAttributes' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.HashMap&lt;java.lang.String, java.lang.String&gt;']]"
		[Register ("sendAttributes", "(Ljava/lang/String;Ljava/util/HashMap;)V", "GetSendAttributes_Ljava_lang_String_Ljava_util_HashMap_Handler")]
		public virtual unsafe void SendAttributes (string screenName, global::System.Collections.Generic.IDictionary<string, string> data)
		{
			const string __id = "sendAttributes.(Ljava/lang/String;Ljava/util/HashMap;)V";
			IntPtr native_screenName = JNIEnv.NewString ((string)screenName);
			IntPtr native_data = global::Android.Runtime.JavaDictionary<string, string>.ToLocalJniHandle (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_screenName);
				__args [1] = new JniArgumentValue (native_data);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_screenName);
				JNIEnv.DeleteLocalRef (native_data);
				global::System.GC.KeepAlive (data);
			}
		}

		static Delegate cb_sendAttributes_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_;
#pragma warning disable 0169
		static Delegate GetSendAttributes_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_Handler ()
		{
			if (cb_sendAttributes_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_ == null)
				cb_sendAttributes_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLL_V (n_SendAttributes_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_));
			return cb_sendAttributes_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_;
		}

		static void n_SendAttributes_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_ (IntPtr jnienv, IntPtr native__this, IntPtr native_screenName, IntPtr native_data, IntPtr native_shieldCallback)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.ShieldFingerprintUseCase> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var screenName = JNIEnv.GetString (native_screenName, JniHandleOwnership.DoNotTransfer);
			var data = global::Android.Runtime.JavaDictionary<string, string>.FromJniHandle (native_data, JniHandleOwnership.DoNotTransfer);
			var shieldCallback = (global::Com.Shield.Android.IShieldCallback)global::Java.Lang.Object.GetObject<global::Com.Shield.Android.IShieldCallback> (native_shieldCallback, JniHandleOwnership.DoNotTransfer);
			__this.SendAttributes (screenName, data, shieldCallback);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='ShieldFingerprintUseCase']/method[@name='sendAttributes' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.HashMap&lt;java.lang.String, java.lang.String&gt;'] and parameter[3][@type='com.shield.android.ShieldCallback&lt;java.lang.Boolean&gt;']]"
		[Register ("sendAttributes", "(Ljava/lang/String;Ljava/util/HashMap;Lcom/shield/android/ShieldCallback;)V", "GetSendAttributes_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_Handler")]
		public virtual unsafe void SendAttributes (string screenName, global::System.Collections.Generic.IDictionary<string, string> data, global::Com.Shield.Android.IShieldCallback shieldCallback)
		{
			const string __id = "sendAttributes.(Ljava/lang/String;Ljava/util/HashMap;Lcom/shield/android/ShieldCallback;)V";
			IntPtr native_screenName = JNIEnv.NewString ((string)screenName);
			IntPtr native_data = global::Android.Runtime.JavaDictionary<string, string>.ToLocalJniHandle (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_screenName);
				__args [1] = new JniArgumentValue (native_data);
				__args [2] = new JniArgumentValue ((shieldCallback == null) ? IntPtr.Zero : ((global::Java.Lang.Object) shieldCallback).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_screenName);
				JNIEnv.DeleteLocalRef (native_data);
				global::System.GC.KeepAlive (data);
				global::System.GC.KeepAlive (shieldCallback);
			}
		}

		static Delegate cb_sendDeviceSignature_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSendDeviceSignature_Ljava_lang_String_Handler ()
		{
			if (cb_sendDeviceSignature_Ljava_lang_String_ == null)
				cb_sendDeviceSignature_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SendDeviceSignature_Ljava_lang_String_));
			return cb_sendDeviceSignature_Ljava_lang_String_;
		}

		static void n_SendDeviceSignature_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_screenName)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.ShieldFingerprintUseCase> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var screenName = JNIEnv.GetString (native_screenName, JniHandleOwnership.DoNotTransfer);
			__this.SendDeviceSignature (screenName);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='ShieldFingerprintUseCase']/method[@name='sendDeviceSignature' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("sendDeviceSignature", "(Ljava/lang/String;)V", "GetSendDeviceSignature_Ljava_lang_String_Handler")]
		public virtual unsafe void SendDeviceSignature (string screenName)
		{
			const string __id = "sendDeviceSignature.(Ljava/lang/String;)V";
			IntPtr native_screenName = JNIEnv.NewString ((string)screenName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_screenName);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_screenName);
			}
		}

		static Delegate cb_sendDeviceSignature_Ljava_lang_String_Lcom_shield_android_Shield_DeviceResultStateListener_;
#pragma warning disable 0169
		static Delegate GetSendDeviceSignature_Ljava_lang_String_Lcom_shield_android_Shield_DeviceResultStateListener_Handler ()
		{
			if (cb_sendDeviceSignature_Ljava_lang_String_Lcom_shield_android_Shield_DeviceResultStateListener_ == null)
				cb_sendDeviceSignature_Ljava_lang_String_Lcom_shield_android_Shield_DeviceResultStateListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_SendDeviceSignature_Ljava_lang_String_Lcom_shield_android_Shield_DeviceResultStateListener_));
			return cb_sendDeviceSignature_Ljava_lang_String_Lcom_shield_android_Shield_DeviceResultStateListener_;
		}

		static void n_SendDeviceSignature_Ljava_lang_String_Lcom_shield_android_Shield_DeviceResultStateListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_screenName, IntPtr native_deviceResultStateListener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.ShieldFingerprintUseCase> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var screenName = JNIEnv.GetString (native_screenName, JniHandleOwnership.DoNotTransfer);
			var deviceResultStateListener = (global::Com.Shield.Android.Shield.IDeviceResultStateListener)global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.IDeviceResultStateListener> (native_deviceResultStateListener, JniHandleOwnership.DoNotTransfer);
			__this.SendDeviceSignature (screenName, deviceResultStateListener);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='ShieldFingerprintUseCase']/method[@name='sendDeviceSignature' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='com.shield.android.Shield.DeviceResultStateListener']]"
		[Register ("sendDeviceSignature", "(Ljava/lang/String;Lcom/shield/android/Shield$DeviceResultStateListener;)V", "GetSendDeviceSignature_Ljava_lang_String_Lcom_shield_android_Shield_DeviceResultStateListener_Handler")]
		public virtual unsafe void SendDeviceSignature (string screenName, global::Com.Shield.Android.Shield.IDeviceResultStateListener deviceResultStateListener)
		{
			const string __id = "sendDeviceSignature.(Ljava/lang/String;Lcom/shield/android/Shield$DeviceResultStateListener;)V";
			IntPtr native_screenName = JNIEnv.NewString ((string)screenName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_screenName);
				__args [1] = new JniArgumentValue ((deviceResultStateListener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) deviceResultStateListener).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_screenName);
				global::System.GC.KeepAlive (deviceResultStateListener);
			}
		}

		static Delegate cb_sendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_;
#pragma warning disable 0169
		static Delegate GetSendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_Handler ()
		{
			if (cb_sendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_ == null)
				cb_sendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_SendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_));
			return cb_sendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_;
		}

		static void n_SendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_ (IntPtr jnienv, IntPtr native__this, IntPtr native_screenName, IntPtr native_data)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.ShieldFingerprintUseCase> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var screenName = JNIEnv.GetString (native_screenName, JniHandleOwnership.DoNotTransfer);
			var data = global::Android.Runtime.JavaDictionary<string, string>.FromJniHandle (native_data, JniHandleOwnership.DoNotTransfer);
			__this.SendDeviceSignature (screenName, data);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='ShieldFingerprintUseCase']/method[@name='sendDeviceSignature' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.HashMap&lt;java.lang.String, java.lang.String&gt;']]"
		[Register ("sendDeviceSignature", "(Ljava/lang/String;Ljava/util/HashMap;)V", "GetSendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_Handler")]
		protected virtual unsafe void SendDeviceSignature (string screenName, global::System.Collections.Generic.IDictionary<string, string> data)
		{
			const string __id = "sendDeviceSignature.(Ljava/lang/String;Ljava/util/HashMap;)V";
			IntPtr native_screenName = JNIEnv.NewString ((string)screenName);
			IntPtr native_data = global::Android.Runtime.JavaDictionary<string, string>.ToLocalJniHandle (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_screenName);
				__args [1] = new JniArgumentValue (native_data);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_screenName);
				JNIEnv.DeleteLocalRef (native_data);
				global::System.GC.KeepAlive (data);
			}
		}

		static Delegate cb_sendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_Shield_DeviceResultStateListener_;
#pragma warning disable 0169
		static Delegate GetSendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_Shield_DeviceResultStateListener_Handler ()
		{
			if (cb_sendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_Shield_DeviceResultStateListener_ == null)
				cb_sendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_Shield_DeviceResultStateListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLL_V (n_SendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_Shield_DeviceResultStateListener_));
			return cb_sendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_Shield_DeviceResultStateListener_;
		}

		static void n_SendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_Shield_DeviceResultStateListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_screenName, IntPtr native_data, IntPtr native_deviceResultStateListener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.ShieldFingerprintUseCase> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var screenName = JNIEnv.GetString (native_screenName, JniHandleOwnership.DoNotTransfer);
			var data = global::Android.Runtime.JavaDictionary<string, string>.FromJniHandle (native_data, JniHandleOwnership.DoNotTransfer);
			var deviceResultStateListener = (global::Com.Shield.Android.Shield.IDeviceResultStateListener)global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.IDeviceResultStateListener> (native_deviceResultStateListener, JniHandleOwnership.DoNotTransfer);
			__this.SendDeviceSignature (screenName, data, deviceResultStateListener);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='ShieldFingerprintUseCase']/method[@name='sendDeviceSignature' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.HashMap&lt;java.lang.String, java.lang.String&gt;'] and parameter[3][@type='com.shield.android.Shield.DeviceResultStateListener']]"
		[Register ("sendDeviceSignature", "(Ljava/lang/String;Ljava/util/HashMap;Lcom/shield/android/Shield$DeviceResultStateListener;)V", "GetSendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_Shield_DeviceResultStateListener_Handler")]
		protected virtual unsafe void SendDeviceSignature (string screenName, global::System.Collections.Generic.IDictionary<string, string> data, global::Com.Shield.Android.Shield.IDeviceResultStateListener deviceResultStateListener)
		{
			const string __id = "sendDeviceSignature.(Ljava/lang/String;Ljava/util/HashMap;Lcom/shield/android/Shield$DeviceResultStateListener;)V";
			IntPtr native_screenName = JNIEnv.NewString ((string)screenName);
			IntPtr native_data = global::Android.Runtime.JavaDictionary<string, string>.ToLocalJniHandle (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_screenName);
				__args [1] = new JniArgumentValue (native_data);
				__args [2] = new JniArgumentValue ((deviceResultStateListener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) deviceResultStateListener).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_screenName);
				JNIEnv.DeleteLocalRef (native_data);
				global::System.GC.KeepAlive (data);
				global::System.GC.KeepAlive (deviceResultStateListener);
			}
		}

		static Delegate cb_sendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_ZLcom_shield_android_Shield_DeviceResultStateListener_;
#pragma warning disable 0169
		static Delegate GetSendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_ZLcom_shield_android_Shield_DeviceResultStateListener_Handler ()
		{
			if (cb_sendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_ZLcom_shield_android_Shield_DeviceResultStateListener_ == null)
				cb_sendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_ZLcom_shield_android_Shield_DeviceResultStateListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLLZL_V (n_SendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_ZLcom_shield_android_Shield_DeviceResultStateListener_));
			return cb_sendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_ZLcom_shield_android_Shield_DeviceResultStateListener_;
		}

		static void n_SendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_ZLcom_shield_android_Shield_DeviceResultStateListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_screenName, IntPtr native_data, IntPtr native_shieldCallback, bool defaultCallback, IntPtr native_deviceResultStateListener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.ShieldFingerprintUseCase> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var screenName = JNIEnv.GetString (native_screenName, JniHandleOwnership.DoNotTransfer);
			var data = global::Android.Runtime.JavaDictionary<string, string>.FromJniHandle (native_data, JniHandleOwnership.DoNotTransfer);
			var shieldCallback = (global::Com.Shield.Android.IShieldCallback)global::Java.Lang.Object.GetObject<global::Com.Shield.Android.IShieldCallback> (native_shieldCallback, JniHandleOwnership.DoNotTransfer);
			var deviceResultStateListener = (global::Com.Shield.Android.Shield.IDeviceResultStateListener)global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.IDeviceResultStateListener> (native_deviceResultStateListener, JniHandleOwnership.DoNotTransfer);
			__this.SendDeviceSignature (screenName, data, shieldCallback, defaultCallback, deviceResultStateListener);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='ShieldFingerprintUseCase']/method[@name='sendDeviceSignature' and count(parameter)=5 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.HashMap&lt;java.lang.String, java.lang.String&gt;'] and parameter[3][@type='com.shield.android.ShieldCallback&lt;org.json.JSONObject&gt;'] and parameter[4][@type='boolean'] and parameter[5][@type='com.shield.android.Shield.DeviceResultStateListener']]"
		[Register ("sendDeviceSignature", "(Ljava/lang/String;Ljava/util/HashMap;Lcom/shield/android/ShieldCallback;ZLcom/shield/android/Shield$DeviceResultStateListener;)V", "GetSendDeviceSignature_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_ZLcom_shield_android_Shield_DeviceResultStateListener_Handler")]
		protected virtual unsafe void SendDeviceSignature (string screenName, global::System.Collections.Generic.IDictionary<string, string> data, global::Com.Shield.Android.IShieldCallback shieldCallback, bool defaultCallback, global::Com.Shield.Android.Shield.IDeviceResultStateListener deviceResultStateListener)
		{
			const string __id = "sendDeviceSignature.(Ljava/lang/String;Ljava/util/HashMap;Lcom/shield/android/ShieldCallback;ZLcom/shield/android/Shield$DeviceResultStateListener;)V";
			IntPtr native_screenName = JNIEnv.NewString ((string)screenName);
			IntPtr native_data = global::Android.Runtime.JavaDictionary<string, string>.ToLocalJniHandle (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (native_screenName);
				__args [1] = new JniArgumentValue (native_data);
				__args [2] = new JniArgumentValue ((shieldCallback == null) ? IntPtr.Zero : ((global::Java.Lang.Object) shieldCallback).Handle);
				__args [3] = new JniArgumentValue (defaultCallback);
				__args [4] = new JniArgumentValue ((deviceResultStateListener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) deviceResultStateListener).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_screenName);
				JNIEnv.DeleteLocalRef (native_data);
				global::System.GC.KeepAlive (data);
				global::System.GC.KeepAlive (shieldCallback);
				global::System.GC.KeepAlive (deviceResultStateListener);
			}
		}

		static Delegate cb_setDeviceResultStateListener_Lcom_shield_android_Shield_DeviceResultStateListener_;
#pragma warning disable 0169
		static Delegate GetSetDeviceResultStateListener_Lcom_shield_android_Shield_DeviceResultStateListener_Handler ()
		{
			if (cb_setDeviceResultStateListener_Lcom_shield_android_Shield_DeviceResultStateListener_ == null)
				cb_setDeviceResultStateListener_Lcom_shield_android_Shield_DeviceResultStateListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetDeviceResultStateListener_Lcom_shield_android_Shield_DeviceResultStateListener_));
			return cb_setDeviceResultStateListener_Lcom_shield_android_Shield_DeviceResultStateListener_;
		}

		static void n_SetDeviceResultStateListener_Lcom_shield_android_Shield_DeviceResultStateListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_deviceResultStateListener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.ShieldFingerprintUseCase> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var deviceResultStateListener = (global::Com.Shield.Android.Shield.IDeviceResultStateListener)global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.IDeviceResultStateListener> (native_deviceResultStateListener, JniHandleOwnership.DoNotTransfer);
			__this.SetDeviceResultStateListener (deviceResultStateListener);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='ShieldFingerprintUseCase']/method[@name='setDeviceResultStateListener' and count(parameter)=1 and parameter[1][@type='com.shield.android.Shield.DeviceResultStateListener']]"
		[Register ("setDeviceResultStateListener", "(Lcom/shield/android/Shield$DeviceResultStateListener;)V", "GetSetDeviceResultStateListener_Lcom_shield_android_Shield_DeviceResultStateListener_Handler")]
		public virtual unsafe void SetDeviceResultStateListener (global::Com.Shield.Android.Shield.IDeviceResultStateListener deviceResultStateListener)
		{
			const string __id = "setDeviceResultStateListener.(Lcom/shield/android/Shield$DeviceResultStateListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((deviceResultStateListener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) deviceResultStateListener).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (deviceResultStateListener);
			}
		}

		static Delegate cb_stopFridaListener;
#pragma warning disable 0169
		static Delegate GetStopFridaListenerHandler ()
		{
			if (cb_stopFridaListener == null)
				cb_stopFridaListener = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_StopFridaListener));
			return cb_stopFridaListener;
		}

		static void n_StopFridaListener (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.ShieldFingerprintUseCase> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.StopFridaListener ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='ShieldFingerprintUseCase']/method[@name='stopFridaListener' and count(parameter)=0]"
		[Register ("stopFridaListener", "()V", "GetStopFridaListenerHandler")]
		protected virtual unsafe void StopFridaListener ()
		{
			const string __id = "stopFridaListener.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		#region "Event implementation for Com.Shield.Android.Shield.IDeviceResultStateListener"

		public event EventHandler DeviceResultState {
			add {
				global::Java.Interop.EventHelper.AddEventHandler<global::Com.Shield.Android.Shield.IDeviceResultStateListener, global::Com.Shield.Android.Shield.IDeviceResultStateListenerImplementor>(
				ref weak_implementor_SetDeviceResultStateListener,
				__CreateIDeviceResultStateListenerImplementor,
				SetDeviceResultStateListener,
				__h => __h.Handler += value);
			}
			remove {
				global::Java.Interop.EventHelper.RemoveEventHandler<global::Com.Shield.Android.Shield.IDeviceResultStateListener, global::Com.Shield.Android.Shield.IDeviceResultStateListenerImplementor>(
				ref weak_implementor_SetDeviceResultStateListener,
				global::Com.Shield.Android.Shield.IDeviceResultStateListenerImplementor.__IsEmpty,
				__v => SetDeviceResultStateListener (null),
				__h => __h.Handler -= value);
			}
		}

		WeakReference weak_implementor_SetDeviceResultStateListener;

		global::Com.Shield.Android.Shield.IDeviceResultStateListenerImplementor __CreateIDeviceResultStateListenerImplementor ()
		{
			return new global::Com.Shield.Android.Shield.IDeviceResultStateListenerImplementor (this);
		}

		#endregion

	}
}
