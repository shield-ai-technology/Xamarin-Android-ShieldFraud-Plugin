//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Shield.Android {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.shield.android']/class[@name='Shield']"
	[global::Android.Runtime.Register ("com/shield/android/Shield", DoNotGenerateAcw=true)]
	public partial class Shield : global::Java.Lang.Object {
		// Metadata.xml XPath field reference: path="/api/package[@name='com.shield.android']/class[@name='Shield']/field[@name='ENVIRONMENT_DEV']"
		[Register ("ENVIRONMENT_DEV")]
		public const string EnvironmentDev = (string) "DEV";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.shield.android']/class[@name='Shield']/field[@name='ENVIRONMENT_PROD']"
		[Register ("ENVIRONMENT_PROD")]
		public const string EnvironmentProd = (string) "PROD";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.shield.android']/class[@name='Shield']/field[@name='ENVIRONMENT_STAGING']"
		[Register ("ENVIRONMENT_STAGING")]
		public const string EnvironmentStaging = (string) "STAGING";

		// Metadata.xml XPath class reference: path="/api/package[@name='com.shield.android']/class[@name='Shield.Builder']"
		[global::Android.Runtime.Register ("com/shield/android/Shield$Builder", DoNotGenerateAcw=true)]
		public partial class Builder : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/shield/android/Shield$Builder", typeof (Builder));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected Builder (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.shield.android']/class[@name='Shield.Builder']/constructor[@name='Shield.Builder' and count(parameter)=3 and parameter[1][@type='android.app.Activity'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]"
			[Register (".ctor", "(Landroid/app/Activity;Ljava/lang/String;Ljava/lang/String;)V", "")]
			public unsafe Builder (global::Android.App.Activity activity, string siteId, string secretKey) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "(Landroid/app/Activity;Ljava/lang/String;Ljava/lang/String;)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_siteId = JNIEnv.NewString ((string)siteId);
				IntPtr native_secretKey = JNIEnv.NewString ((string)secretKey);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [3];
					__args [0] = new JniArgumentValue ((activity == null) ? IntPtr.Zero : ((global::Java.Lang.Object) activity).Handle);
					__args [1] = new JniArgumentValue (native_siteId);
					__args [2] = new JniArgumentValue (native_secretKey);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_siteId);
					JNIEnv.DeleteLocalRef (native_secretKey);
					global::System.GC.KeepAlive (activity);
				}
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.shield.android']/class[@name='Shield.Builder']/constructor[@name='Shield.Builder' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]"
			[Register (".ctor", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V", "")]
			public unsafe Builder (global::Android.Content.Context context, string siteId, string secretKey) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_siteId = JNIEnv.NewString ((string)siteId);
				IntPtr native_secretKey = JNIEnv.NewString ((string)secretKey);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [3];
					__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
					__args [1] = new JniArgumentValue (native_siteId);
					__args [2] = new JniArgumentValue (native_secretKey);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_siteId);
					JNIEnv.DeleteLocalRef (native_secretKey);
					global::System.GC.KeepAlive (context);
				}
			}

			static Delegate cb_blockScreenRecording;
#pragma warning disable 0169
			static Delegate GetBlockScreenRecordingHandler ()
			{
				if (cb_blockScreenRecording == null)
					cb_blockScreenRecording = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_BlockScreenRecording));
				return cb_blockScreenRecording;
			}

			static IntPtr n_BlockScreenRecording (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.Builder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.ToLocalJniHandle (__this.BlockScreenRecording ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='Shield.Builder']/method[@name='blockScreenRecording' and count(parameter)=0]"
			[Register ("blockScreenRecording", "()Lcom/shield/android/Shield$Builder;", "GetBlockScreenRecordingHandler")]
			public virtual unsafe global::Com.Shield.Android.Shield.Builder BlockScreenRecording ()
			{
				const string __id = "blockScreenRecording.()Lcom/shield/android/Shield$Builder;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.Builder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate cb_build;
#pragma warning disable 0169
			static Delegate GetBuildHandler ()
			{
				if (cb_build == null)
					cb_build = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_Build));
				return cb_build;
			}

			static IntPtr n_Build (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.Builder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.ToLocalJniHandle (__this.Build ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='Shield.Builder']/method[@name='build' and count(parameter)=0]"
			[Register ("build", "()Lcom/shield/android/Shield;", "GetBuildHandler")]
			public virtual unsafe global::Com.Shield.Android.Shield Build ()
			{
				const string __id = "build.()Lcom/shield/android/Shield;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate cb_enableBackgroundListener;
#pragma warning disable 0169
			static Delegate GetEnableBackgroundListenerHandler ()
			{
				if (cb_enableBackgroundListener == null)
					cb_enableBackgroundListener = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_EnableBackgroundListener));
				return cb_enableBackgroundListener;
			}

			static IntPtr n_EnableBackgroundListener (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.Builder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.ToLocalJniHandle (__this.EnableBackgroundListener ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='Shield.Builder']/method[@name='enableBackgroundListener' and count(parameter)=0]"
			[Register ("enableBackgroundListener", "()Lcom/shield/android/Shield$Builder;", "GetEnableBackgroundListenerHandler")]
			public virtual unsafe global::Com.Shield.Android.Shield.Builder EnableBackgroundListener ()
			{
				const string __id = "enableBackgroundListener.()Lcom/shield/android/Shield$Builder;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.Builder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate cb_enableMocking;
#pragma warning disable 0169
			static Delegate GetEnableMockingHandler ()
			{
				if (cb_enableMocking == null)
					cb_enableMocking = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_EnableMocking));
				return cb_enableMocking;
			}

			static IntPtr n_EnableMocking (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.Builder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.ToLocalJniHandle (__this.EnableMocking ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='Shield.Builder']/method[@name='enableMocking' and count(parameter)=0]"
			[Register ("enableMocking", "()Lcom/shield/android/Shield$Builder;", "GetEnableMockingHandler")]
			public virtual unsafe global::Com.Shield.Android.Shield.Builder EnableMocking ()
			{
				const string __id = "enableMocking.()Lcom/shield/android/Shield$Builder;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.Builder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate cb_enableShieldProcess;
#pragma warning disable 0169
			static Delegate GetEnableShieldProcessHandler ()
			{
				if (cb_enableShieldProcess == null)
					cb_enableShieldProcess = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_EnableShieldProcess));
				return cb_enableShieldProcess;
			}

			static IntPtr n_EnableShieldProcess (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.Builder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.ToLocalJniHandle (__this.EnableShieldProcess ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='Shield.Builder']/method[@name='enableShieldProcess' and count(parameter)=0]"
			[Register ("enableShieldProcess", "()Lcom/shield/android/Shield$Builder;", "GetEnableShieldProcessHandler")]
			public virtual unsafe global::Com.Shield.Android.Shield.Builder EnableShieldProcess ()
			{
				const string __id = "enableShieldProcess.()Lcom/shield/android/Shield$Builder;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.Builder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate cb_registerDeviceShieldCallback_Lcom_shield_android_ShieldCallback_;
#pragma warning disable 0169
			static Delegate GetRegisterDeviceShieldCallback_Lcom_shield_android_ShieldCallback_Handler ()
			{
				if (cb_registerDeviceShieldCallback_Lcom_shield_android_ShieldCallback_ == null)
					cb_registerDeviceShieldCallback_Lcom_shield_android_ShieldCallback_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_RegisterDeviceShieldCallback_Lcom_shield_android_ShieldCallback_));
				return cb_registerDeviceShieldCallback_Lcom_shield_android_ShieldCallback_;
			}

			static IntPtr n_RegisterDeviceShieldCallback_Lcom_shield_android_ShieldCallback_ (IntPtr jnienv, IntPtr native__this, IntPtr native_deviceShieldCallback)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.Builder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				var deviceShieldCallback = (global::Com.Shield.Android.IShieldCallback)global::Java.Lang.Object.GetObject<global::Com.Shield.Android.IShieldCallback> (native_deviceShieldCallback, JniHandleOwnership.DoNotTransfer);
				IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.RegisterDeviceShieldCallback (deviceShieldCallback));
				return __ret;
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='Shield.Builder']/method[@name='registerDeviceShieldCallback' and count(parameter)=1 and parameter[1][@type='com.shield.android.ShieldCallback&lt;org.json.JSONObject&gt;']]"
			[Register ("registerDeviceShieldCallback", "(Lcom/shield/android/ShieldCallback;)Lcom/shield/android/Shield$Builder;", "GetRegisterDeviceShieldCallback_Lcom_shield_android_ShieldCallback_Handler")]
			public virtual unsafe global::Com.Shield.Android.Shield.Builder RegisterDeviceShieldCallback (global::Com.Shield.Android.IShieldCallback deviceShieldCallback)
			{
				const string __id = "registerDeviceShieldCallback.(Lcom/shield/android/ShieldCallback;)Lcom/shield/android/Shield$Builder;";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((deviceShieldCallback == null) ? IntPtr.Zero : ((global::Java.Lang.Object) deviceShieldCallback).Handle);
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.Builder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					global::System.GC.KeepAlive (deviceShieldCallback);
				}
			}

			static Delegate cb_setEnvironment_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetSetEnvironment_Ljava_lang_String_Handler ()
			{
				if (cb_setEnvironment_Ljava_lang_String_ == null)
					cb_setEnvironment_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_SetEnvironment_Ljava_lang_String_));
				return cb_setEnvironment_Ljava_lang_String_;
			}

			static IntPtr n_SetEnvironment_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_environment)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.Builder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				var environment = JNIEnv.GetString (native_environment, JniHandleOwnership.DoNotTransfer);
				IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.SetEnvironment (environment));
				return __ret;
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='Shield.Builder']/method[@name='setEnvironment' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setEnvironment", "(Ljava/lang/String;)Lcom/shield/android/Shield$Builder;", "GetSetEnvironment_Ljava_lang_String_Handler")]
			public virtual unsafe global::Com.Shield.Android.Shield.Builder SetEnvironment (string environment)
			{
				const string __id = "setEnvironment.(Ljava/lang/String;)Lcom/shield/android/Shield$Builder;";
				IntPtr native_environment = JNIEnv.NewString ((string)environment);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_environment);
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.Builder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					JNIEnv.DeleteLocalRef (native_environment);
				}
			}

			static Delegate cb_setLogLevel_Lcom_shield_android_Shield_LogLevel_;
#pragma warning disable 0169
			static Delegate GetSetLogLevel_Lcom_shield_android_Shield_LogLevel_Handler ()
			{
				if (cb_setLogLevel_Lcom_shield_android_Shield_LogLevel_ == null)
					cb_setLogLevel_Lcom_shield_android_Shield_LogLevel_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_SetLogLevel_Lcom_shield_android_Shield_LogLevel_));
				return cb_setLogLevel_Lcom_shield_android_Shield_LogLevel_;
			}

			static IntPtr n_SetLogLevel_Lcom_shield_android_Shield_LogLevel_ (IntPtr jnienv, IntPtr native__this, IntPtr native_logLevel)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.Builder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				var logLevel = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.LogLevel> (native_logLevel, JniHandleOwnership.DoNotTransfer);
				IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.SetLogLevel (logLevel));
				return __ret;
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='Shield.Builder']/method[@name='setLogLevel' and count(parameter)=1 and parameter[1][@type='com.shield.android.Shield.LogLevel']]"
			[Register ("setLogLevel", "(Lcom/shield/android/Shield$LogLevel;)Lcom/shield/android/Shield$Builder;", "GetSetLogLevel_Lcom_shield_android_Shield_LogLevel_Handler")]
			public virtual unsafe global::Com.Shield.Android.Shield.Builder SetLogLevel (global::Com.Shield.Android.Shield.LogLevel logLevel)
			{
				const string __id = "setLogLevel.(Lcom/shield/android/Shield$LogLevel;)Lcom/shield/android/Shield$Builder;";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((logLevel == null) ? IntPtr.Zero : ((global::Java.Lang.Object) logLevel).Handle);
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.Builder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					global::System.GC.KeepAlive (logLevel);
				}
			}

			static Delegate cb_setPartnerId_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetSetPartnerId_Ljava_lang_String_Handler ()
			{
				if (cb_setPartnerId_Ljava_lang_String_ == null)
					cb_setPartnerId_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_SetPartnerId_Ljava_lang_String_));
				return cb_setPartnerId_Ljava_lang_String_;
			}

			static IntPtr n_SetPartnerId_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_partnerId)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.Builder> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				var partnerId = JNIEnv.GetString (native_partnerId, JniHandleOwnership.DoNotTransfer);
				IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.SetPartnerId (partnerId));
				return __ret;
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='Shield.Builder']/method[@name='setPartnerId' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setPartnerId", "(Ljava/lang/String;)Lcom/shield/android/Shield$Builder;", "GetSetPartnerId_Ljava_lang_String_Handler")]
			public virtual unsafe global::Com.Shield.Android.Shield.Builder SetPartnerId (string partnerId)
			{
				const string __id = "setPartnerId.(Ljava/lang/String;)Lcom/shield/android/Shield$Builder;";
				IntPtr native_partnerId = JNIEnv.NewString ((string)partnerId);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_partnerId);
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.Builder> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					JNIEnv.DeleteLocalRef (native_partnerId);
				}
			}

		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.shield.android']/interface[@name='Shield.DeviceResultStateListener']"
		[Register ("com/shield/android/Shield$DeviceResultStateListener", "", "Com.Shield.Android.Shield/IDeviceResultStateListenerInvoker")]
		public partial interface IDeviceResultStateListener : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/interface[@name='Shield.DeviceResultStateListener']/method[@name='isReady' and count(parameter)=0]"
			[Register ("isReady", "()V", "GetIsReadyHandler:Com.Shield.Android.Shield/IDeviceResultStateListenerInvoker, ShieldFraud_Android")]
			void IsReady ();

		}

		[global::Android.Runtime.Register ("com/shield/android/Shield$DeviceResultStateListener", DoNotGenerateAcw=true)]
		internal partial class IDeviceResultStateListenerInvoker : global::Java.Lang.Object, IDeviceResultStateListener {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/shield/android/Shield$DeviceResultStateListener", typeof (IDeviceResultStateListenerInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IDeviceResultStateListener GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IDeviceResultStateListener> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.shield.android.Shield.DeviceResultStateListener'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IDeviceResultStateListenerInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate cb_isReady;
#pragma warning disable 0169
			static Delegate GetIsReadyHandler ()
			{
				if (cb_isReady == null)
					cb_isReady = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_IsReady));
				return cb_isReady;
			}

			static void n_IsReady (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.IDeviceResultStateListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				__this.IsReady ();
			}
#pragma warning restore 0169

			IntPtr id_isReady;
			public unsafe void IsReady ()
			{
				if (id_isReady == IntPtr.Zero)
					id_isReady = JNIEnv.GetMethodID (class_ref, "isReady", "()V");
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_isReady);
			}

		}

		[global::Android.Runtime.Register ("mono/com/shield/android/Shield_DeviceResultStateListenerImplementor")]
		internal sealed partial class IDeviceResultStateListenerImplementor : global::Java.Lang.Object, IDeviceResultStateListener {

			object sender;

			public IDeviceResultStateListenerImplementor (object sender) : base (global::Android.Runtime.JNIEnv.StartCreateInstance ("mono/com/shield/android/Shield_DeviceResultStateListenerImplementor", "()V"), JniHandleOwnership.TransferLocalRef)
			{
				global::Android.Runtime.JNIEnv.FinishCreateInstance (((global::Java.Lang.Object) this).Handle, "()V");
				this.sender = sender;
			}

			#pragma warning disable 0649
			public EventHandler Handler;
			#pragma warning restore 0649

			public void IsReady ()
			{
				var __h = Handler;
				if (__h != null)
					__h (sender, new EventArgs ());
			}

			internal static bool __IsEmpty (IDeviceResultStateListenerImplementor value)
			{
				return value.Handler == null;
			}

		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.shield.android']/interface[@name='Shield.Environment']"
		[Register ("com/shield/android/Shield$Environment", "", "Com.Shield.Android.Shield/IEnvironmentInvoker")]
		public partial interface IEnvironment : global::Java.Lang.Annotation.IAnnotation {
		}

		[global::Android.Runtime.Register ("com/shield/android/Shield$Environment", DoNotGenerateAcw=true)]
		internal partial class IEnvironmentInvoker : global::Java.Lang.Object, IEnvironment {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/shield/android/Shield$Environment", typeof (IEnvironmentInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IEnvironment GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IEnvironment> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.shield.android.Shield.Environment'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IEnvironmentInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate cb_annotationType;
#pragma warning disable 0169
			static Delegate GetAnnotationTypeHandler ()
			{
				if (cb_annotationType == null)
					cb_annotationType = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_AnnotationType));
				return cb_annotationType;
			}

			static IntPtr n_AnnotationType (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.IEnvironment> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.ToLocalJniHandle (__this.AnnotationType ());
			}
#pragma warning restore 0169

			IntPtr id_annotationType;
			public unsafe global::Java.Lang.Class AnnotationType ()
			{
				if (id_annotationType == IntPtr.Zero)
					id_annotationType = JNIEnv.GetMethodID (class_ref, "annotationType", "()Ljava/lang/Class;");
				return global::Java.Lang.Object.GetObject<global::Java.Lang.Class> (JNIEnv.CallObjectMethod (((global::Java.Lang.Object) this).Handle, id_annotationType), JniHandleOwnership.TransferLocalRef);
			}

			static Delegate cb_equals_Ljava_lang_Object_;
#pragma warning disable 0169
			static Delegate GetEquals_Ljava_lang_Object_Handler ()
			{
				if (cb_equals_Ljava_lang_Object_ == null)
					cb_equals_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_Equals_Ljava_lang_Object_));
				return cb_equals_Ljava_lang_Object_;
			}

			static bool n_Equals_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_obj)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.IEnvironment> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				var obj = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_obj, JniHandleOwnership.DoNotTransfer);
				bool __ret = __this.Equals (obj);
				return __ret;
			}
#pragma warning restore 0169

			IntPtr id_equals_Ljava_lang_Object_;
			public unsafe bool Equals (global::Java.Lang.Object obj)
			{
				if (id_equals_Ljava_lang_Object_ == IntPtr.Zero)
					id_equals_Ljava_lang_Object_ = JNIEnv.GetMethodID (class_ref, "equals", "(Ljava/lang/Object;)Z");
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue ((obj == null) ? IntPtr.Zero : ((global::Java.Lang.Object) obj).Handle);
				var __ret = JNIEnv.CallBooleanMethod (((global::Java.Lang.Object) this).Handle, id_equals_Ljava_lang_Object_, __args);
				return __ret;
			}

			static Delegate cb_hashCode;
#pragma warning disable 0169
			static Delegate GetGetHashCodeHandler ()
			{
				if (cb_hashCode == null)
					cb_hashCode = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetHashCode));
				return cb_hashCode;
			}

			static int n_GetHashCode (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.IEnvironment> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.GetHashCode ();
			}
#pragma warning restore 0169

			IntPtr id_hashCode;
			public unsafe int GetHashCode ()
			{
				if (id_hashCode == IntPtr.Zero)
					id_hashCode = JNIEnv.GetMethodID (class_ref, "hashCode", "()I");
				return JNIEnv.CallIntMethod (((global::Java.Lang.Object) this).Handle, id_hashCode);
			}

			static Delegate cb_toString;
#pragma warning disable 0169
			static Delegate GetToStringHandler ()
			{
				if (cb_toString == null)
					cb_toString = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_ToString));
				return cb_toString;
			}

			static IntPtr n_ToString (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.IEnvironment> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.NewString (__this.ToString ());
			}
#pragma warning restore 0169

			IntPtr id_toString;
			public unsafe string ToString ()
			{
				if (id_toString == IntPtr.Zero)
					id_toString = JNIEnv.GetMethodID (class_ref, "toString", "()Ljava/lang/String;");
				return JNIEnv.GetString (JNIEnv.CallObjectMethod (((global::Java.Lang.Object) this).Handle, id_toString), JniHandleOwnership.TransferLocalRef);
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.shield.android']/class[@name='Shield.LogLevel']"
		[global::Android.Runtime.Register ("com/shield/android/Shield$LogLevel", DoNotGenerateAcw=true)]
		public sealed partial class LogLevel : global::Java.Lang.Enum {

			// Metadata.xml XPath field reference: path="/api/package[@name='com.shield.android']/class[@name='Shield.LogLevel']/field[@name='DEBUG']"
			[Register ("DEBUG")]
			public static global::Com.Shield.Android.Shield.LogLevel Debug {
				get {
					const string __id = "DEBUG.Lcom/shield/android/Shield$LogLevel;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.LogLevel> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.shield.android']/class[@name='Shield.LogLevel']/field[@name='INFO']"
			[Register ("INFO")]
			public static global::Com.Shield.Android.Shield.LogLevel Info {
				get {
					const string __id = "INFO.Lcom/shield/android/Shield$LogLevel;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.LogLevel> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.shield.android']/class[@name='Shield.LogLevel']/field[@name='NONE']"
			[Register ("NONE")]
			public static global::Com.Shield.Android.Shield.LogLevel None {
				get {
					const string __id = "NONE.Lcom/shield/android/Shield$LogLevel;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.LogLevel> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.shield.android']/class[@name='Shield.LogLevel']/field[@name='VERBOSE']"
			[Register ("VERBOSE")]
			public static global::Com.Shield.Android.Shield.LogLevel Verbose {
				get {
					const string __id = "VERBOSE.Lcom/shield/android/Shield$LogLevel;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.LogLevel> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}

			static readonly JniPeerMembers _members = new XAPeerMembers ("com/shield/android/Shield$LogLevel", typeof (LogLevel));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			internal LogLevel (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='Shield.LogLevel']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("valueOf", "(Ljava/lang/String;)Lcom/shield/android/Shield$LogLevel;", "")]
			public static unsafe global::Com.Shield.Android.Shield.LogLevel ValueOf (string name)
			{
				const string __id = "valueOf.(Ljava/lang/String;)Lcom/shield/android/Shield$LogLevel;";
				IntPtr native_name = JNIEnv.NewString ((string)name);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_name);
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.LogLevel> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					JNIEnv.DeleteLocalRef (native_name);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='Shield.LogLevel']/method[@name='values' and count(parameter)=0]"
			[Register ("values", "()[Lcom/shield/android/Shield$LogLevel;", "")]
			public static unsafe global::Com.Shield.Android.Shield.LogLevel[] Values ()
			{
				const string __id = "values.()[Lcom/shield/android/Shield$LogLevel;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return (global::Com.Shield.Android.Shield.LogLevel[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Com.Shield.Android.Shield.LogLevel));
				} finally {
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/shield/android/Shield", typeof (Shield));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected Shield (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		public static unsafe global::Com.Shield.Android.Shield Instance {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='Shield']/method[@name='getInstance' and count(parameter)=0]"
			[Register ("getInstance", "()Lcom/shield/android/Shield;", "")]
			get {
				const string __id = "getInstance.()Lcom/shield/android/Shield;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_getLatestDeviceResult;
#pragma warning disable 0169
		static Delegate GetGetLatestDeviceResultHandler ()
		{
			if (cb_getLatestDeviceResult == null)
				cb_getLatestDeviceResult = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetLatestDeviceResult));
			return cb_getLatestDeviceResult;
		}

		static IntPtr n_GetLatestDeviceResult (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.LatestDeviceResult);
		}
#pragma warning restore 0169

		public virtual unsafe global::Org.Json.JSONObject LatestDeviceResult {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='Shield']/method[@name='getLatestDeviceResult' and count(parameter)=0]"
			[Register ("getLatestDeviceResult", "()Lorg/json/JSONObject;", "GetGetLatestDeviceResultHandler")]
			get {
				const string __id = "getLatestDeviceResult.()Lorg/json/JSONObject;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Org.Json.JSONObject> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_getResponseError;
#pragma warning disable 0169
		static Delegate GetGetResponseErrorHandler ()
		{
			if (cb_getResponseError == null)
				cb_getResponseError = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetResponseError));
			return cb_getResponseError;
		}

		static IntPtr n_GetResponseError (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.ResponseError);
		}
#pragma warning restore 0169

		public virtual unsafe global::Com.Shield.Android.ShieldException ResponseError {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='Shield']/method[@name='getResponseError' and count(parameter)=0]"
			[Register ("getResponseError", "()Lcom/shield/android/ShieldException;", "GetGetResponseErrorHandler")]
			get {
				const string __id = "getResponseError.()Lcom/shield/android/ShieldException;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Shield.Android.ShieldException> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_getSessionId;
#pragma warning disable 0169
		static Delegate GetGetSessionIdHandler ()
		{
			if (cb_getSessionId == null)
				cb_getSessionId = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetSessionId));
			return cb_getSessionId;
		}

		static IntPtr n_GetSessionId (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.NewString (__this.SessionId);
		}
#pragma warning restore 0169

		public virtual unsafe string SessionId {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='Shield']/method[@name='getSessionId' and count(parameter)=0]"
			[Register ("getSessionId", "()Ljava/lang/String;", "GetGetSessionIdHandler")]
			get {
				const string __id = "getSessionId.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_sendAttributes_Ljava_lang_String_Ljava_util_HashMap_;
#pragma warning disable 0169
		static Delegate GetSendAttributes_Ljava_lang_String_Ljava_util_HashMap_Handler ()
		{
			if (cb_sendAttributes_Ljava_lang_String_Ljava_util_HashMap_ == null)
				cb_sendAttributes_Ljava_lang_String_Ljava_util_HashMap_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_SendAttributes_Ljava_lang_String_Ljava_util_HashMap_));
			return cb_sendAttributes_Ljava_lang_String_Ljava_util_HashMap_;
		}

		static void n_SendAttributes_Ljava_lang_String_Ljava_util_HashMap_ (IntPtr jnienv, IntPtr native__this, IntPtr native_screenName, IntPtr native_data)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var screenName = JNIEnv.GetString (native_screenName, JniHandleOwnership.DoNotTransfer);
			var data = global::Android.Runtime.JavaDictionary<string, string>.FromJniHandle (native_data, JniHandleOwnership.DoNotTransfer);
			__this.SendAttributes (screenName, data);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='Shield']/method[@name='sendAttributes' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.HashMap&lt;java.lang.String, java.lang.String&gt;']]"
		[Register ("sendAttributes", "(Ljava/lang/String;Ljava/util/HashMap;)V", "GetSendAttributes_Ljava_lang_String_Ljava_util_HashMap_Handler")]
		public virtual unsafe void SendAttributes (string screenName, global::System.Collections.Generic.IDictionary<string, string> data)
		{
			const string __id = "sendAttributes.(Ljava/lang/String;Ljava/util/HashMap;)V";
			IntPtr native_screenName = JNIEnv.NewString ((string)screenName);
			IntPtr native_data = global::Android.Runtime.JavaDictionary<string, string>.ToLocalJniHandle (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_screenName);
				__args [1] = new JniArgumentValue (native_data);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_screenName);
				JNIEnv.DeleteLocalRef (native_data);
				global::System.GC.KeepAlive (data);
			}
		}

		static Delegate cb_sendAttributes_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_;
#pragma warning disable 0169
		static Delegate GetSendAttributes_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_Handler ()
		{
			if (cb_sendAttributes_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_ == null)
				cb_sendAttributes_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLL_V (n_SendAttributes_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_));
			return cb_sendAttributes_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_;
		}

		static void n_SendAttributes_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_ (IntPtr jnienv, IntPtr native__this, IntPtr native_screenName, IntPtr native_data, IntPtr native_shieldCallback)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var screenName = JNIEnv.GetString (native_screenName, JniHandleOwnership.DoNotTransfer);
			var data = global::Android.Runtime.JavaDictionary<string, string>.FromJniHandle (native_data, JniHandleOwnership.DoNotTransfer);
			var shieldCallback = (global::Com.Shield.Android.IShieldCallback)global::Java.Lang.Object.GetObject<global::Com.Shield.Android.IShieldCallback> (native_shieldCallback, JniHandleOwnership.DoNotTransfer);
			__this.SendAttributes (screenName, data, shieldCallback);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='Shield']/method[@name='sendAttributes' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.HashMap&lt;java.lang.String, java.lang.String&gt;'] and parameter[3][@type='com.shield.android.ShieldCallback&lt;java.lang.Boolean&gt;']]"
		[Register ("sendAttributes", "(Ljava/lang/String;Ljava/util/HashMap;Lcom/shield/android/ShieldCallback;)V", "GetSendAttributes_Ljava_lang_String_Ljava_util_HashMap_Lcom_shield_android_ShieldCallback_Handler")]
		public virtual unsafe void SendAttributes (string screenName, global::System.Collections.Generic.IDictionary<string, string> data, global::Com.Shield.Android.IShieldCallback shieldCallback)
		{
			const string __id = "sendAttributes.(Ljava/lang/String;Ljava/util/HashMap;Lcom/shield/android/ShieldCallback;)V";
			IntPtr native_screenName = JNIEnv.NewString ((string)screenName);
			IntPtr native_data = global::Android.Runtime.JavaDictionary<string, string>.ToLocalJniHandle (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_screenName);
				__args [1] = new JniArgumentValue (native_data);
				__args [2] = new JniArgumentValue ((shieldCallback == null) ? IntPtr.Zero : ((global::Java.Lang.Object) shieldCallback).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_screenName);
				JNIEnv.DeleteLocalRef (native_data);
				global::System.GC.KeepAlive (data);
				global::System.GC.KeepAlive (shieldCallback);
			}
		}

		static Delegate cb_sendDeviceSignature_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSendDeviceSignature_Ljava_lang_String_Handler ()
		{
			if (cb_sendDeviceSignature_Ljava_lang_String_ == null)
				cb_sendDeviceSignature_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SendDeviceSignature_Ljava_lang_String_));
			return cb_sendDeviceSignature_Ljava_lang_String_;
		}

		static void n_SendDeviceSignature_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_screenName)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var screenName = JNIEnv.GetString (native_screenName, JniHandleOwnership.DoNotTransfer);
			__this.SendDeviceSignature (screenName);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='Shield']/method[@name='sendDeviceSignature' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("sendDeviceSignature", "(Ljava/lang/String;)V", "GetSendDeviceSignature_Ljava_lang_String_Handler")]
		public virtual unsafe void SendDeviceSignature (string screenName)
		{
			const string __id = "sendDeviceSignature.(Ljava/lang/String;)V";
			IntPtr native_screenName = JNIEnv.NewString ((string)screenName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_screenName);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_screenName);
			}
		}

		static Delegate cb_sendDeviceSignature_Ljava_lang_String_Lcom_shield_android_Shield_DeviceResultStateListener_;
#pragma warning disable 0169
		static Delegate GetSendDeviceSignature_Ljava_lang_String_Lcom_shield_android_Shield_DeviceResultStateListener_Handler ()
		{
			if (cb_sendDeviceSignature_Ljava_lang_String_Lcom_shield_android_Shield_DeviceResultStateListener_ == null)
				cb_sendDeviceSignature_Ljava_lang_String_Lcom_shield_android_Shield_DeviceResultStateListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_SendDeviceSignature_Ljava_lang_String_Lcom_shield_android_Shield_DeviceResultStateListener_));
			return cb_sendDeviceSignature_Ljava_lang_String_Lcom_shield_android_Shield_DeviceResultStateListener_;
		}

		static void n_SendDeviceSignature_Ljava_lang_String_Lcom_shield_android_Shield_DeviceResultStateListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_screenName, IntPtr native_deviceResultStateListener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var screenName = JNIEnv.GetString (native_screenName, JniHandleOwnership.DoNotTransfer);
			var deviceResultStateListener = (global::Com.Shield.Android.Shield.IDeviceResultStateListener)global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.IDeviceResultStateListener> (native_deviceResultStateListener, JniHandleOwnership.DoNotTransfer);
			__this.SendDeviceSignature (screenName, deviceResultStateListener);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='Shield']/method[@name='sendDeviceSignature' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='com.shield.android.Shield.DeviceResultStateListener']]"
		[Register ("sendDeviceSignature", "(Ljava/lang/String;Lcom/shield/android/Shield$DeviceResultStateListener;)V", "GetSendDeviceSignature_Ljava_lang_String_Lcom_shield_android_Shield_DeviceResultStateListener_Handler")]
		public virtual unsafe void SendDeviceSignature (string screenName, global::Com.Shield.Android.Shield.IDeviceResultStateListener deviceResultStateListener)
		{
			const string __id = "sendDeviceSignature.(Ljava/lang/String;Lcom/shield/android/Shield$DeviceResultStateListener;)V";
			IntPtr native_screenName = JNIEnv.NewString ((string)screenName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_screenName);
				__args [1] = new JniArgumentValue ((deviceResultStateListener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) deviceResultStateListener).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_screenName);
				global::System.GC.KeepAlive (deviceResultStateListener);
			}
		}

		static Delegate cb_setDeviceResultStateListener_Lcom_shield_android_Shield_DeviceResultStateListener_;
#pragma warning disable 0169
		static Delegate GetSetDeviceResultStateListener_Lcom_shield_android_Shield_DeviceResultStateListener_Handler ()
		{
			if (cb_setDeviceResultStateListener_Lcom_shield_android_Shield_DeviceResultStateListener_ == null)
				cb_setDeviceResultStateListener_Lcom_shield_android_Shield_DeviceResultStateListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetDeviceResultStateListener_Lcom_shield_android_Shield_DeviceResultStateListener_));
			return cb_setDeviceResultStateListener_Lcom_shield_android_Shield_DeviceResultStateListener_;
		}

		static void n_SetDeviceResultStateListener_Lcom_shield_android_Shield_DeviceResultStateListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_deviceResultStateListener)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var deviceResultStateListener = (global::Com.Shield.Android.Shield.IDeviceResultStateListener)global::Java.Lang.Object.GetObject<global::Com.Shield.Android.Shield.IDeviceResultStateListener> (native_deviceResultStateListener, JniHandleOwnership.DoNotTransfer);
			__this.SetDeviceResultStateListener (deviceResultStateListener);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='Shield']/method[@name='setDeviceResultStateListener' and count(parameter)=1 and parameter[1][@type='com.shield.android.Shield.DeviceResultStateListener']]"
		[Register ("setDeviceResultStateListener", "(Lcom/shield/android/Shield$DeviceResultStateListener;)V", "GetSetDeviceResultStateListener_Lcom_shield_android_Shield_DeviceResultStateListener_Handler")]
		public virtual unsafe void SetDeviceResultStateListener (global::Com.Shield.Android.Shield.IDeviceResultStateListener deviceResultStateListener)
		{
			const string __id = "setDeviceResultStateListener.(Lcom/shield/android/Shield$DeviceResultStateListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((deviceResultStateListener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) deviceResultStateListener).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (deviceResultStateListener);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='Shield']/method[@name='setSingletonInstance' and count(parameter)=1 and parameter[1][@type='com.shield.android.Shield']]"
		[Register ("setSingletonInstance", "(Lcom/shield/android/Shield;)V", "")]
		public static unsafe void SetSingletonInstance (global::Com.Shield.Android.Shield shieldClient)
		{
			const string __id = "setSingletonInstance.(Lcom/shield/android/Shield;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((shieldClient == null) ? IntPtr.Zero : ((global::Java.Lang.Object) shieldClient).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (shieldClient);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.shield.android']/class[@name='Shield']/method[@name='stop' and count(parameter)=0]"
		[Register ("stop", "()Z", "")]
		public static unsafe bool Stop ()
		{
			const string __id = "stop.()Z";
			try {
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
				return __rm;
			} finally {
			}
		}

		#region "Event implementation for Com.Shield.Android.Shield.IDeviceResultStateListener"

		public event EventHandler DeviceResultState {
			add {
				global::Java.Interop.EventHelper.AddEventHandler<global::Com.Shield.Android.Shield.IDeviceResultStateListener, global::Com.Shield.Android.Shield.IDeviceResultStateListenerImplementor>(
				ref weak_implementor_SetDeviceResultStateListener,
				__CreateIDeviceResultStateListenerImplementor,
				SetDeviceResultStateListener,
				__h => __h.Handler += value);
			}
			remove {
				global::Java.Interop.EventHelper.RemoveEventHandler<global::Com.Shield.Android.Shield.IDeviceResultStateListener, global::Com.Shield.Android.Shield.IDeviceResultStateListenerImplementor>(
				ref weak_implementor_SetDeviceResultStateListener,
				global::Com.Shield.Android.Shield.IDeviceResultStateListenerImplementor.__IsEmpty,
				__v => SetDeviceResultStateListener (null),
				__h => __h.Handler -= value);
			}
		}

		WeakReference weak_implementor_SetDeviceResultStateListener;

		global::Com.Shield.Android.Shield.IDeviceResultStateListenerImplementor __CreateIDeviceResultStateListenerImplementor ()
		{
			return new global::Com.Shield.Android.Shield.IDeviceResultStateListenerImplementor (this);
		}

		#endregion

	}
}
